"""
Django settings for smi project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import ast
import logging
import os
from pathlib import Path

import dj_database_url

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = os.environ.get("SECRET_KEY", 'j@un+wvfy)5%6o)0+1!^e^0f#jec1advdp05eolhni8pc0@3(&')


def get_bool_from_env(name, default_value):
    if name in os.environ:
        value = os.environ[name]
        try:
            return ast.literal_eval(value)
        except ValueError as e:
            raise ValueError("{} is an invalid value for {}".format(value, name)) from e
    return default_value


DEBUG = get_bool_from_env("DEBUG", True)

ALLOWED_HOSTS = ['*']


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'drf_yasg',
    'corsheaders',
    'django_filters',
    'smi.account',
    'smi.core',
    'smi.document',
    'smi.factory',
    'smi.movement',
    'smi.order',
    'smi.product',
    'smi.zone',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'smi.core.middlewares.CurrentUserMiddleware',

]

ROOT_URLCONF = 'smi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'smi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": dj_database_url.config(
        default=os.environ.get("DATABASE_URL"), conn_max_age=600
    )
}
if DEBUG:
    logging.warning(f'DATABASE: {os.environ.get("DATABASE_URL")}')

AUTH_USER_MODEL = 'account.User'


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_L10N = True

USE_TZ = False


AWS_ACCESS_KEY_ID = os.environ.get("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.environ.get("AWS_SECRET_ACCESS_KEY")
AWS_MEDIA_BUCKET_NAME = os.environ.get("AWS_MEDIA_BUCKET_NAME")
AWS_MEDIA_CUSTOM_DOMAIN = os.environ.get("AWS_MEDIA_CUSTOM_DOMAIN")
AWS_DEFAULT_ACL = os.environ.get("AWS_DEFAULT_ACL", 'private')
AWS_S3_REGION_NAME = os.environ.get("AWS_REGION_NAME", 'ap-south-1')
S3_USE_SIGV4 = True
AWS_S3_FILE_OVERWRITE = False
AWS_QUERYSTRING_AUTH = True
AWS_QUERYSTRING_EXPIRE = 600
AWS_S3_ADDRESSING_STYLE = "virtual"

if AWS_MEDIA_BUCKET_NAME:
    DEFAULT_FILE_STORAGE = "smi.core.storages.S3MediaStorage"



STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = os.environ.get("STATIC_URL", "/static/")

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = [
    'http://localhost:3000',

]
CORS_ORIGIN_REGEX_WHITELIST = [
    'http://localhost:3000',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        'smi.account.permissions.RoleModelPermissions'
    ],
    'DEFAULT_PAGINATION_CLASS': 'smi.core.pagination.PageNumberPagination',
    'PAGE_SIZE': 15,
    'DATETIME_FORMAT': "%d.%m.%Y %H:%M:%S",
}

USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


SAP_API = {
    'AUTH_TOKEN': f'Basic {os.environ.get("SAP_AUTH_TOKEN")}',
    'LOGIN': os.environ.get('SAP_LOGIN'),
    'PASSWORD': os.environ.get('SAP_PASSWORD'),
    'PRODUCT': {
        'URL': os.environ.get('SAP_PRODUCT_URL'),
        'QUERY': os.environ.get('SAP_PRODUCT_QUERY', '<urn:ZmmMaterialsByProd><GsImportData>{}</GsImportData></urn:ZmmMaterialsByProd>'),
    },
    'ORDER': {
        'URL': os.environ.get('SAP_ORDER_URL'),
        'QUERY': os.environ.get(
            'SAP_ORDER_QUERY',
            '<urn:ZppCreatePoViaSmi><GsImportData>{}</GsImportData></urn:ZppCreatePoViaSmi>'
        ),
    },
    'ORDERCHANGE': {
        'URL': os.environ.get('SAP_ORDERCHANGE_URL'),
        'QUERY': os.environ.get(
            'SAP_ORDERCHANGE_QUERY',
            '<ZppChangePoViaSmi xmlns="urn:sap-com:document:sap:soap:functions:mc-style"><GsImportData xmlns="">{}</GsImportData></ZppChangePoViaSmi>'
        ),
    },
    'MOVEMENT': {
        'URL': os.environ.get('SAP_MOVEMENT_URL'),
        'QUERY': os.environ.get(
            'SAP_MOVEMENT_QUERY',
            '<urn:ZppSmiWarehouseStock><GsImportData>{}</GsImportData></urn:ZppSmiWarehouseStock>'
        )
    },
    'PRODUCTMOVEMENT': {
        'URL': os.environ.get('SAP_PRODUCTMOVEMENT_URL'),
        'QUERY': os.environ.get(
            'SAP_PRODUCTMOVEMENT_QUERY',
            '<urn:ZppSmiWarehouseMvmnts><GsImportData>{}</GsImportData></urn:ZppSmiWarehouseMvmnts>'
        )
    },
    'ORDERCLOSE': {
        'URL': os.environ.get('SAP_ORDERCLOSE_URL'),
        'QUERY': os.environ.get(
            'SAP_ORDERCLOSE_QUERY',
            '<ZppConfurmPoViaSmi xmlns="urn:sap-com:document:sap:soap:functions:mc-style"><GsImportData xmlns="">{}</GsImportData></ZppConfurmPoViaSmi>'
        )
    },
    'ORDERCHECK': {
        'URL': os.environ.get('SAP_ORDERCHECK_URL'),
        'QUERY': os.environ.get(
            'SAP_ORDERCHECK_QUERY',
            '<ZsmiCheckMaterialCostEstim xmlns="urn:sap-com:document:sap:soap:functions:mc-style"><GsImportData xmlns="">{}</GsImportData></ZsmiCheckMaterialCostEstim>'
        )
    }
}

CELERY_BROKER_URL = os.environ.get('REDIS_URL', 'redis://localhost:6379')
CELERY_RESULT_BACKEND = os.environ.get('REDIS_URL', 'redis://localhost:6379')
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_EAGER = True
CELERY_ALWAYS_EAGER = True
